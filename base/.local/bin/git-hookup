#!/bin/sh
set -eu

GITDIR="$(git rev-parse --absolute-git-dir || {
  echo "Couldn't find git dir, not a git repository"
  exit 1
})"

usage() {
  echo "Usage: git hook [template]"
  echo "Install a git hook template"
  echo "Valid templates:"
  echo "  ctags - automatically regenerate ctags"
  echo "  todo  - check for todo markers before pushing"

  exit "$1"
}

do_install() {
  FILE="$GITDIR/hooks/$1"

  test -x "$FILE" && {
    echo "$FILE already installed, won't overwrite"
    return
  }

  cat - > "$FILE"
  chmod 0750 "$FILE"
}

install_ctags() {
  do_install ctags <<-'EOF'
	#!/bin/sh
	set -eu
	
	GITDIR=$(git rev-parse --absolute-git-dir)
	EXCLUDES="$GITDIR/exclude"
	TAGS="$GITDIR/tags"
	TMP="$TAGS.$$"
	
	if test -x "$(command -v ctags)"; then
	  # TMP expands on signal
	  trap 'rm -f $TMP' EXIT
	
	  if test -f "$EXCLUDES"; then
	    echo "[ctags] excluding from $EXCLUDES" >&2
	    ctags --tag-relative "-Rf$TMP" "--exclude=$GITDIR" "--exclude=@$EXCLUDES"
	  else
	    ctags --tag-relative "-Rf$TMP" "--exclude=$GITDIR"
	  fi
	
	  mv "$TMP" "$TAGS"
	fi
	EOF
  for file in post-checkout post-commit post-merge post-rewrite; do
    do_install $file <<-'EOF'
	#!/bin/sh
	set -eu
	"$(git rev-parse --absolute-git-dir)/hooks/ctags" &
	EOF
  done
}

install_todo() {
  do_install todo <<-'EOF'
	#!/bin/sh
	set -eu
	
	if ! command -v rg >/dev/null; then
	  echo "rg not found! Not checking for todos."
	  exit 0
	fi
	
	if rg -e '[[:space:]]$' .
	then
	   echo "REJECTED. Found trailing whitespace." >&2
	   exit 1
	fi
	
	if rg 'FIXME:|XXX:|TODO:' .
	then
	  echo "REJECTED. Found open TODOs." >&2
	  exit 1
	fi
	EOF
  do_install pre-push <<-'EOF'
	#!/bin/sh
	set -eu
	"$(git rev-parse --absolute-git-dir)/hooks/check"
	EOF
}

case ${1:-""} in
  "help"  ) usage 0       ;;
  "ctags" ) install_ctags ;;
  "todo"  ) install_todo  ;;
  *       ) usage 1       ;;
esac
